generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // "postgresql"
  url      = env("DATABASE_URL")
}

model environment {
  id                                 String                              @id @default(uuid())
  name                               String                              @unique
  description                        String?
  active                             Boolean                             @default(true)
  created_by                         String
  user_name                          String?
  latitude                           Float
  longitude                          Float
  created_at                         DateTime                            @default(now())
  updated_at                         DateTime                            @updatedAt
  environment_user                   environment_user[]
  environment_manager                environment_manager[]
  environment_restriction_access     environment_restriction_access[]
  environment_temporary_access       environment_temporary_access[]
  environment_microcontroller_config environment_microcontroller_config?
}

model environment_microcontroller_config {
  id             Int         @id @default(autoincrement())
  phrase         String
  backup_phrase  String?     @default("first")
  environment    environment @relation(fields: [environment_id], references: [id])
  environment_id String      @unique
}

model environment_restriction_access {
  id             String      @id @default(uuid())
  description    String
  day            Int
  start_time     DateTime
  end_time       DateTime
  environment_id String
  environment    environment @relation(fields: [environment_id], references: [id])

  @@unique([day, start_time, end_time, environment_id])
}

model environment_manager {
  id             String      @id @default(uuid())
  active         Boolean     @default(true)
  user_id        String
  user_name      String?
  created_by     String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt
  environment_id String
  environment    environment @relation(fields: [environment_id], references: [id])

  @@unique([user_id, environment_id])
}

model environment_user {
  id                              String                            @id @default(uuid())
  permanent_access                Boolean                           @default(false)
  start_period                    DateTime?
  end_period                      DateTime?
  active                          Boolean                           @default(true)
  user_id                         String
  user_name                       String?
  created_by                      String
  created_at                      DateTime                          @default(now())
  updated_at                      DateTime                          @updatedAt
  environment_id                  String
  environment                     environment                       @relation(fields: [environment_id], references: [id])
  environment_user_access_control environment_user_access_control[]

  @@unique([user_id, environment_id])
}

model environment_user_access_control {
  id                              String                        @id @default(uuid())
  day                             Int
  start_time                      DateTime
  end_time                        DateTime
  active                          Boolean                       @default(true)
  no_access_restrict              Boolean                       @default(false)
  created_at                      DateTime                      @default(now())
  updated_at                      DateTime                      @updatedAt
  environment_user_id             String?
  environment_user                environment_user?             @relation(fields: [environment_user_id], references: [id])
  environment_temporary_access_id String?
  environment_temporary_access    environment_temporary_access? @relation(fields: [environment_temporary_access_id], references: [id])

  @@unique([day, start_time, end_time, environment_user_id])
}

model environment_temporary_access {
  id                              String                            @id @default(uuid())
  description                     String?
  active                          Boolean                           @default(true)
  created_by                      String
  created_at                      DateTime                          @default(now())
  updated_at                      DateTime                          @updatedAt
  start_period                    DateTime                          @default(now())
  end_period                      DateTime
  user_id                         String
  user_name                       String
  environment_id                  String
  environment                     environment                       @relation(fields: [environment_id], references: [id])
  environment_user_access_control environment_user_access_control[]

  @@unique([user_id, environment_id])
}
