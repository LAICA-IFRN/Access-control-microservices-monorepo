generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  UserRoles UserRoles[]
}

model DocumentType {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Document Document[]
}

model UserRoles {
  id        String   @id @default(uuid())
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  Role      Role     @relation(fields: [roleId], references: [id])
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  roleId    Int

  @@unique([userId, roleId], name: "UserRoles_userId_roleId_unique")
}

model User {
  id        String      @id @default(uuid())
  name      String?
  email     String?     @unique
  password  String?
  active    Boolean     @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  UserRoles UserRoles[]
  Document  Document?
  Photo     Photo?
}

model Document {
  id             Int          @id @default(autoincrement())
  content        String       @unique
  DocumentType   DocumentType @relation(fields: [documentTypeId], references: [id])
  documentTypeId Int
  User           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String       @unique
}

model Photo {
  id            String @id @default(uuid())
  encoded       String
  User          User?  @relation(fields: [userId], references: [id])
  userId        String @unique
}

